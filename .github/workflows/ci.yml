name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Install dependencies
      run: |
        uv sync --all-extras
    
    - name: Lint with ruff
      run: |
        uv run ruff check src/ tests/
    
    - name: Format check with ruff
      run: |
        uv run ruff format --check src/ tests/
    
    - name: Type check with mypy
      run: |
        uv run mypy src/
      continue-on-error: true  # Allow type checking to fail for now
    
    - name: Test with pytest
      run: |
        uv run pytest tests/ --cov=email_csv_extractor --cov-report=xml --cov-report=term-missing
      env:
        # Demo environment variables for testing
        AZURE_CLIENT_ID: demo-client-id
        AZURE_CLIENT_SECRET: demo-client-secret
        AZURE_TENANT_ID: demo-tenant-id
        EMAIL_MAILBOX_ADDRESS: test@example.com
        SHAREPOINT_TEAM_ID: demo-team-id
        SHAREPOINT_CHANNEL_ID: demo-channel-id
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Install dependencies
      run: |
        uv sync --all-extras
        uv add bandit safety
    
    - name: Security scan with bandit
      run: |
        uv run bandit -r src/ -f json -o bandit-report.json
      continue-on-error: true
    
    - name: Dependency security check with safety
      run: |
        uv run safety check --json --output safety-report.json
      continue-on-error: true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
      if: always()

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Build package
      run: |
        uv build
    
    - name: Check package
      run: |
        uv add twine
        uv run twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/